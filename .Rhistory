p <- p + annotate("rect", xmin=3134, xmax=3172, ymin=-4.5, ymax=-5, alpha=.075, fill="skyblue")
p <- p + annotate("rect", xmin=3176, xmax=3343, ymin=-4.5, ymax=-5, alpha=.075, fill="slateblue")
# boi = 2,444,167..2,470,043
p <- p + annotate("text", x = 3037, y = -4.75, label="kirre", size=6)
p <- p + annotate("text", x = 3153, y = -4.75, label="notch", size=6)
p <- p + annotate("text", x = 3259, y = -4.75, label="dunce", size=6)
}
if(chrom == "X"){
p <- p + geom_vline(xintercept = 3134, colour="slateblue", alpha=.7, linetype="dotted") + geom_vline(xintercept = 3172, colour="slateblue", alpha=.7, linetype="dotted")
}
p <- p + scale_y_continuous(expression(paste(Log[2], ' ratio')), lim=ylim)
p <- p + scale_x_continuous(xlabel)
p <- p + scale_colour_gradientn(colours=c("firebrick3","violet"), limits=c(-5,5), trans='log2')
p <- p + aes(alpha=abs(log2))
p <- p + theme(legend.position="none")
temp = subset(data, p.value < min(glim))
if(nrow(temp)>0) p <- p + geom_point(data=temp, map=aes(x=(position/1000),y=log2), colour="firebrick3")
if(!is.na(title)) p$title <- "title"
p
}
args <- commandArgs()
cnv_file<-cnvs/HUM-1.TEx.nodups.hits.filt-vs-HUM-3.TEx.nodups.hits.filt.window-10000.minw-4.cnv
id<-HUM-1
chrom<-X
cat("Reading .cnv file for ", id, ": ", cnv_file, "\n", sep='')
plot_title<-paste("CNV in ", id, " on ", chrom, "\n", sep='')
read_file_in<-read.delim(cnv_file)
# Removes values of '-Inf'
clean_file<-read_file_in[!(read_file_in$log2=="-Inf"),]
clean_file<-read_file_in[!(read_file_in$log2=="Inf"),]
options("scipen"=10, "digits"=3)
# cnv.print(read_file_in)
cnv.print(read_file_in, file=paste(id, '_cnvs.txt', sep=''))
cnv.summary(read_file_in)
plot.cnv.chr(clean_file, ylim=c(-5,5), chromosome=chrom, title=plot_title)
# cnvs_outfile<-paste(id, '_cnvs.txt', sep='')
# ggsave(cnvs_outfile)
Chromosome_outfile <- paste(id, '_', chrom, '.pdf', sep='')
ggsave(Chromosome_outfile, width = 15, height = 7)
# notch locus X:2,939,623-3,408,302
if(chrom == "X"){
plot.cnv.chr(clean_file, chromosome=chrom, from=2939623, to=3408302, ylim=c(-5,5))
notch_outfile <- paste(id, '_', 'notch.pdf', sep='')
ggsave(notch_outfile, width = 15, height = 7)
}
library(ggplot2)
options("scipen"=100, "digits"=10)
cnv.cal <- function(file, log2.threshold=NA, chromosomal.normalization=TRUE, annotate=FALSE, minimum.window=4)
{
if(is.na(log2.threshold))
{
log2.threshold <- as.numeric(sub('\\.pvalue-.+$','', sub('^.+\\.log2-', '', file, perl=TRUE), perl=TRUE))
}
data <- read.delim(file)
data$position <- round((data$end+data$start)/2)
data$log2 <- NA
data$p.value <- NA
test.lambda <- list()
ref.lambda <- list()
chrom <- as.character(unique(data$chromosome))
if(chromosomal.normalization)
{
for(chr in chrom)
{
sub <- subset(data, chromosome==chr)
lambda.test <- mean(sub$test)
test.lambda[[chr]] <- lambda.test
lambda.ref <- mean(sub$ref)
ref.lambda[[chr]] <- lambda.ref
norm <- lambda.test/lambda.ref
ratio <- sub$test/sub$ref
sub$log2 <- log2(sub$test/sub$ref/norm)
data[rownames(sub), 'log2'] <- sub$log2
subp <- subset(sub, log2>=0)
if(nrow(subp)>0) data[rownames(subp),'p.value'] <- pnorm(z2t(subp$test/subp$ref,lambda.test,lambda.ref), lower.tail=FALSE)
subn <- subset(sub, log2<0)
if(nrow(subn)>0) data[rownames(subn),'p.value'] <- pnorm(z2t(subn$test/subn$ref,lambda.test,lambda.ref), lower.tail=TRUE)
}
}else
{
lambda.test <- mean(data$test)
lambda.ref <- mean(data$ref)
for(chr in chrom)
{
test.lambda[[chr]]<-lambda.test
ref.lambda[[chr]]<-lambda.ref
}
norm <- lambda.test/lambda.ref
ratio <- data$test/data$ref
data$log2 <- log2(ratio/norm)
subp <- subset(data, log2>=0)
data[rownames(subp),'p.value'] <- pnorm(z2t(subp$test/subp$ref,lambda.test,lambda.ref), lower.tail=FALSE)
subn <- subset(data, log2<0)
data[rownames(subn),'p.value'] <- pnorm(z2t(subn$test/subn$ref,lambda.test,lambda.ref), lower.tail=TRUE)
}
if(annotate)
{
data$cnv <- 0
data$cnv.size <- NA
data$cnv.log2 <- NA
data$cnv.p.value <- NA
window.size <- data[1,'end']-data[1,'start']+1;
step <- ceiling(window.size/2);
for(chr in chrom)
{
print(paste('chromosome: ',chr))
sub <- subset(data, chromosome==chr)
cnv.p <- cnv.ANNO(subset(sub,log2>=abs(log2.threshold)), max(sub$cnv, data$cnv), step, minimum.window, log2.threshold)
if(nrow(subset(cnv.p, cnv>0)))
{
data[rownames(cnv.p),'cnv'] <- cnv.p$cnv
}
cnv.n <- cnv.ANNO(subset(sub,log2<=-1*abs(log2.threshold)), max(sub$cnv, data$cnv), step, minimum.window, log2.threshold)
if(nrow(subset(cnv.n, cnv>0)))
{
data[rownames(cnv.n),'cnv'] <- cnv.n$cnv
}
}
if(max(data$cnv)>0)
{
for(id in seq(1,max(data$cnv)))
{
print(paste('cnv_id: ', id, ' of ', max(data$cnv)))
sub <- subset(data, cnv==id)
start <- ceiling(mean(c(min(sub$start), min(sub$position))))
end <- floor(mean(c(max(sub$end), max(sub$position))))
size <- end - start +1
chr <- as.character(unique(sub$chromosome))
ratio <- sum(sub$test)/sum(sub$ref)
norm <- test.lambda[[chr]]/ref.lambda[[chr]]
cnv.p.value <- 2*pnorm(z2t(ratio, test.lambda[[chr]]*nrow(sub), ref.lambda[[chr]]*nrow(sub)), lower.tail=ratio<norm)
index <- which(data$cnv==id)
data[index,'cnv.log2'] <- log2(ratio/norm)
data[index,'cnv.p.value'] <- cnv.p.value
data[index,'cnv.size'] <- size
}
}
}
data
}
z2t <- function(z, lambdax, lambday)
{
(lambday*z-lambdax)/sqrt(lambday*z^2+lambdax)
}
cnv.ANNO <- function(cnv.sub, anno.last, step, minimum.window, threshold)
{
if(nrow(cnv.sub)>1)
{
distance <- cnv.sub[2:nrow(cnv.sub),'start']-cnv.sub[1:(nrow(cnv.sub)-1),'start']
cnv.end <- c(which(distance>step),nrow(cnv.sub))
last <- 1
for(i in cnv.end)
{
if(i-last+1>=minimum.window)
{
anno.last <- anno.last+1
cnv.sub[last:i,'cnv'] <- anno.last
}
last <- i+1
}
}else
{
if(nrow(cnv.sub)==1)
{
if(minimum.window<=1)
{
anno.last <- anno.last+1
cnv.sub$cnv <- anno.last
}
}
}
cnv.sub
}
cnv.print <- function(cnv, file="")
{
cat('cnv', 'chromosome', 'start', 'end', 'size', 'log2', 'p.value', sep="\t", file=file,fill=TRUE, append=FALSE)
for(i in seq(max(min(cnv$cnv),1), max(cnv$cnv)))
{
sub <- subset(cnv, cnv==i)
start <- ceiling(mean(c(min(sub$start), min(sub$position))))
end <- floor(mean(c(max(sub$end), max(sub$position))))
cat(paste('CNVR_',i,sep=''), paste('chr', unique(sub$chromosome), sep=''), start, end, end-start+1, unique(sub$cnv.log2), unique(sub$cnv.p.value), sep="\t", file=file, fill=TRUE, append=TRUE)
}
}
cnv.summary <- function(cnv)
{
true <- subset(cnv, cnv>0)
max.size <- max(true$cnv.size)
min.size <- min(true$cnv.size)
count <- length(unique(true$cnv))
nt.size <- 0
for(i in unique(true$cnv)) nt.size <- nt.size + max(true[which(true$cnv==i),]$cnv.size)
mean.size <- round(nt.size/count, 0)
median.size <- median(unique(true$cnv.size))
percen <- round(100*nrow(true)/nrow(cnv),1)
cat('CNV percentage in genome: ', percen, "%\n", sep='')
cat('CNV nucleotide content:', nt.size, fill=TRUE)
cat('CNV count:', count, fill=TRUE)
cat('Mean size:', mean.size, fill=TRUE)
cat('Median size:', median.size, fill=TRUE)
cat('Max Size:', max.size, fill=TRUE)
cat('Min Size:', min.size, fill=TRUE)
}
plot.cnv.chr <- function(data, chromosome=NA, from=NA, to=NA, title=NA, ylim=c(-4,4), glim=c(NA,NA), xlabel='Position (kb)')
{
chrom.name <- chromosome
if(!is.na(chrom.name)) data <- subset(data, chromosome==chrom.name)
if(!is.na(from) & !is.na(to)) data <- subset(data, position>=from & position<=to)
if(length(unique(data$chromosome))>1) warning('More than one chromosome! use plot.cnv.all() instead?')
if(nrow(subset(data, log2>max(ylim) | log2<min(ylim)))>0) warning('missed some data points due to small ylim range')
if(is.na(glim[1])) glim[1] <- median(subset(data, log2>=0.6 & log2<=1)$p.value)
if(is.na(glim[1])) glim[1] <- quantile(data$p.value, 0.8, na.rm = T)
if(glim[1] == 0) glim[1] <- min(data$p.value[data$p.value > 0], na.rm = T)
if(is.na(glim[2])) glim[2] <- max(na.omit(data$p.value))
p <- ggplot() + geom_point(data=subset(data, p.value >= glim[1]), map=aes(x=(position/1000), y=log2, colour=p.value))
if(!is.na(from) & chrom.name == "X")
{
p <- p + annotate("rect", xmin=2940, xmax=3134, ymin=-4.5, ymax=-5, alpha=.075, fill="skyblue4")
p <- p + annotate("rect", xmin=3134, xmax=3172, ymin=-4.5, ymax=-5, alpha=.075, fill="skyblue")
p <- p + annotate("rect", xmin=3176, xmax=3343, ymin=-4.5, ymax=-5, alpha=.075, fill="slateblue")
# boi = 2,444,167..2,470,043
p <- p + annotate("text", x = 3037, y = -4.75, label="kirre", size=6)
p <- p + annotate("text", x = 3153, y = -4.75, label="notch", size=6)
p <- p + annotate("text", x = 3259, y = -4.75, label="dunce", size=6)
}
if(chrom == "X"){
p <- p + geom_vline(xintercept = 3134, colour="slateblue", alpha=.7, linetype="dotted") + geom_vline(xintercept = 3172, colour="slateblue", alpha=.7, linetype="dotted")
}
p <- p + scale_y_continuous(expression(paste(Log[2], ' ratio')), lim=ylim)
p <- p + scale_x_continuous(xlabel)
p <- p + scale_colour_gradientn(colours=c("firebrick3","violet"), limits=c(-5,5), trans='log2')
p <- p + aes(alpha=abs(log2))
p <- p + theme(legend.position="none")
temp = subset(data, p.value < min(glim))
if(nrow(temp)>0) p <- p + geom_point(data=temp, map=aes(x=(position/1000),y=log2), colour="firebrick3")
if(!is.na(title)) p$title <- "title"
p
}
args <- commandArgs()
cnv_file<-cnvs/HUM-1.TEx.nodups.hits.filt-vs-HUM-3.TEx.nodups.hits.filt.window-10000.minw-4.cnv
id<-HUM-1
chrom<-X
cat("Reading .cnv file for ", id, ": ", cnv_file, "\n", sep='')
plot_title<-paste("CNV in ", id, " on ", chrom, "\n", sep='')
read_file_in<-read.delim(cnv_file)
# Removes values of '-Inf'
clean_file<-read_file_in[!(read_file_in$log2=="-Inf"),]
clean_file<-read_file_in[!(read_file_in$log2=="Inf"),]
options("scipen"=10, "digits"=3)
# cnv.print(read_file_in)
cnv.print(read_file_in, file=paste(id, '_cnvs.txt', sep=''))
cnv.summary(read_file_in)
plot.cnv.chr(clean_file, ylim=c(-5,5), chromosome=chrom, title=plot_title)
# cnvs_outfile<-paste(id, '_cnvs.txt', sep='')
# ggsave(cnvs_outfile)
Chromosome_outfile <- paste(id, '_', chrom, '.pdf', sep='')
ggsave(Chromosome_outfile, width = 15, height = 7)
# notch locus X:2,939,623-3,408,302
if(chrom == "X"){
plot.cnv.chr(clean_file, chromosome=chrom, from=2939623, to=3408302, ylim=c(-5,5))
notch_outfile <- paste(id, '_', 'notch.pdf', sep='')
ggsave(notch_outfile, width = 15, height = 7)
}
cnvs/HUM-1.TEx.nodups.hits.filt-vs-HUM-3.TEx.nodups.hits.filt.window-10000.minw-4.cnv
source("http://bioconductor.org/biocLite.R")
library(gtools)
foldchange2logratio(6, 10)
foldchange2logratio(6, 2)
foldchange2logratio(2, 10)
foldchange2logratio(1, 2)
foldchange2logratio(2, 2)
foldchange2logratio(3, 2)
foldchange2logratio(4, 2)
foldchange2logratio(6, 10)
library(gtools)
foldchange2logratio(0.3, 2)
foldchange2logratio(2, 2)
foldchange2logratio(4, 2)
foldchange(0.3,2)
foldchange2logratio(0.75, 2)
foldchange2logratio(1.25, 2)
foldchange2logratio(1.5, 2)
foldchange2logratio(1.75, 2)
foldchange2logratio(1.5, 2)
foldchange2logratio(1.5, 2)
foldchange2logratio(0.75, 2)
foldchange2logratio(1.25, 2)
foldchange2logratio(1, 2)
foldchange2logratio(1.25, 2)
foldchange2logratio(1.5, 2)
foldchange2logratio(1.75, 2)
foldchange2logratio(2, 2)
getwd()
setwd("Desktop/script_test/CNV-Seq/Harry-Plotter/")
source("ggplot_cnv.R")
plot.chrom(cnv_file = "cnvs/A512R19.TEx.nodups.hits.filt-vs-A512R20.TEx.nodups.hits.filt.window-10000.minw-4.cnv")
plot.chrom(cnv_file = "cnvs/HUM-1.tagged.SC.hits.filt-vs-HUM-3.tagged.SC.hits.filt.window-10000.minw-4.cnv")
dels<-read.delim("../../../Structural Variants/N_del_lengths.txt")
head(dels)
dels<-read.delim("../../../Structural Variants/N_del_lengths.txt", header = F)
head(dels)
dels<-read.delim("../../../Structural Variants/N_del_lengths.txt", header = T)
head(dels)
ggplot(dels) +
geom_bar(aes(id, len))
geom_bar(dels, aes(id, len))
id
dels$id
dels[id]
p <- ggplot()
p <- p + geom_point(data=dels, aes(id, len))
p
p <- p + geom_bar(data=dels, aes(id, len))
p
ggplot(data=dels, aes(len)) + geom_density(aes(fill = id), alpha=0.3)
ggplot(data=dels, aes(len)) + geom_bar(aes(fill = id), alpha=0.3)
ggplot(data=dels, aes(len)) + geom_bar(aes(fill = id), alpha=0.3)
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_density(alpha=0.3)  +
)
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_density(alpha=0.3)
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_histogram(alpha=0.3)
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_histogram(alpha=0.3,stat = "bin")
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_histogram(alpha=0.3,position = "stack")
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_histogram(alpha=0.3,position = "stack")
ggplot(data=dels, aes(len)) +
geom_histogram()
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_histogram(alpha=0.3)
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_density(alpha=0.3)
p
p<-ggplot(data=dels,aes(len) ) + geom_density(alpha=0.3)  +
scale_x_continuous(breaks=c(0:600),labels=id, expand=c(0,0)) +
scale_y_continuous(expand=c(0,.01)) +
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45, hjust = 1), panel.grid = element_blank())
p
p<-ggplot(data=dels,aes(len) ) + geom_density(alpha=0.3)  +
scale_x_continuous(breaks=c(0:600),labels=id, expand=c(0,0)) +
scale_y_continuous(expand=c(0,.01)) +
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45, hjust = 1), panel.grid = element_blank())
p<-ggplot(data=dels,aes(len) ) + geom_density(alpha=0.3)  +
theme(text = element_text(size=20), axis.text.x = element_text(angle = 45, hjust = 1), panel.grid = element_blank())
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_histogram(alpha=0.3)
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_histogram(alpha=0.3, position = "jitter")
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_bar(alpha=0.3, position = "jitter")
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_bar(alpha=0.3)
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_histogram(alpha=0.3)
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_histogram(alpha=0.5)
p
p<-ggplot(data=dels,aes(len, fill = "grey") ) + geom_histogram(alpha=0.5)
p
p<-ggplot(data=dels,aes(len, fill = "grey") ) + geom_histogram(alpha=0.5) + stat_bin(bins = 10)
p
p<-ggplot(data=dels,aes(len, fill = "grey") ) + geom_histogram(alpha=0.5) + stat_bin(bins = 100)
p
p<-ggplot(data=dels,aes(len, fill = grey) ) + geom_histogram(alpha=0.5) + stat_bin(bins = 100)
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_histogram(alpha=0.5) + stat_bin(bins = 100)
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_histogram(alpha=0.5, bins = 5)
p
p<-ggplot(data=dels,aes(len, fill = id) ) + geom_histogram(alpha=0.5, bins = 50)
p
ggplot(dels, aes(x=len) + geom_histogram(binwidth=.5)
)
ggplot(dels, aes(x=len)) + geom_histogram(binwidth=.5)
ggplot(dels, aes(x=len)) + geom_histogram(binwidth=5)
ggplot(dels, aes(x=len)) + geom_histogram(binwidth=50)
ggplot(dels, aes(x=len)) + geom_histogram(binwidth=10)
ggplot(dels, aes(x=len)) + geom_histogram(binwidth=20)
ggplot(dels, aes(x=len)) + geom_density()
ggplot(dels, aes(x=len)) + geom_density(fill = blue)
ggplot(dels, aes(x=len)) + geom_density(fill = id)
ggplot(dels, aes(x=len)) + geom_density(alpha=.2, fill="#FF6666")
ggplot(dels, aes(x=len)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
binwidth=10) +
geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
ggplot(dels, aes(x=len)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
binwidth=20) +
geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
ggplot(dels, aes(x=len)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
binwidth=20) +
geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
ggplot(dels, aes(x=len)) + geom_histogram(binwidth=20)
ggplot(dels, aes(x=len)) + geom_histogram(binwidth=10)
ggplot(dels, aes(x=len)) + geom_histogram(binwidth=20)
]p <- ggplot(dels, aes(x=len)) + geom_histogram(binwidth=20)
p + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0))
p <- ggplot(dels, aes(x=len)) + geom_histogram(binwidth=20)
p + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0))
p <- ggplot(dels, aes(x=len)) + geom_histogram(binwidth=50)
p + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0))
p <- ggplot(dels, aes(x=len)) + geom_histogram(binwidth=10)
p + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0))
p <- ggplot(dels, aes(x=len)) + geom_histogram(binwidth=20)
p + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0))
plot.chrom(cnv_file = "cnvs/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-10000.minw-4.cnv", chrom = "3R")
plot.region(cnv_file = "cnvs/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-10000.minw-4.cnv", chrom = "3R", from=30000000, to=32272834)
plot.region(cnv_file = "cnvs/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-10000.minw-4.cnv", chrom = "3R", from=30800000, to=31000000)
plot.region(cnv_file = "cnvs/w_500/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-500.minw-4.cnv, chrom = "3R", from=30800000, to=31000000)
plot.region(cnv_file = "cnvs/w_500/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-500.minw-4.cnv", chrom = "3R", from=30800000, to=31000000)
plot.region(cnv_file = "cnvs/w_500/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-500.minw-4.cnv", chrom = "3R", from=30999836, to=31140182)
p <- ggplot(dels, aes(x=len)) + geom_histogram(binwidth=20)
p + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0))
p <- ggplot(dels, aes(x=len)) + geom_histogram(binwidth=20)
p + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0)) +
panel.grid = element_blank())
p <- ggplot(dels, aes(x=len)) + geom_histogram(binwidth=20)
p + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0))
p <- ggplot(dels, aes(x=len)) + geom_histogram(binwidth=20)
p <- p + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0))
p<- p + theme(text = element_text(size=20), axis.text.x = element_text(angle = 45, hjust = 1), panel.grid = element_blank())
p
p <- ggplot(dels, aes(x=len)) + geom_histogram(binwidth=20)
p <- p + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0))
p <- p + theme(
text = element_text(size=20),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank(),
panel.background = element_blank()
)
p
source("ggplot_cnv.R")
plot.region(cnv_file = "cnvs/w_500/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-500.minw-4.cnv", chrom = "3R", from=30999836, to=31140182, tick = 10000)
plot.region(cnv_file = "cnvs/w_500/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-500.minw-4.cnv", chrom = "3R", from=31000000, to=31140182, tick = 10000)
plot.region(cnv_file = "cnvs/w_500/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-500.minw-4.cnv", chrom = "3R", from=31000000, to=31140182, tick = 10000)
source("ggplot_cnv.R")
source("ggplot_cnv.R")
plot.region(cnv_file = "cnvs/w_500/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-500.minw-4.cnv", chrom = "3R", from=31000000, to=31140182, tick = 10000)
source("ggplot_cnv.R")
plot.region(cnv_file = "cnvs/w_500/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-500.minw-4.cnv", chrom = "3R", from=31000000, to=31140182, tick = 10000)
source("ggplot_cnv.R")
plot.region(cnv_file = "cnvs/w_500/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-500.minw-4.cnv", chrom = "3R", from=31000000, to=31140182, tick = 10000)
plot.region(cnv_file = "cnvs/w_500/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-500.minw-4.cnv", chrom = "3R", from=31000000, to=31140182, tick = 10000, ylim = c(-2,2))
plot.chrom(cnv_file = "cnvs/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-10000.minw-4.cnv", chrom = "3R", ylim = c(-2,2))
plot.chrom(cnv_file = "cnvs/A573R31.tagged.SC.hits.filt-vs-A573R32.tagged.SC.hits.filt.window-10000.minw-4.cnv", chrom = "X", ylim = c(-2,2))
library(gtools)
foldchange2logratio(1,2)
foldchange2logratio(2,2)
foldchange(10/5)
foldchange(10,5)
foldchange(10,1)
foldchange2logratio(2,2)
foldchange2logratio(0.58,2)
foldchange2logratio(1.58,2)
foldchange2logratio(.58,2)
foldchange2logratio(.56,2)
foldchange2logratio(.53,2)
foldchange2logratio(.5,2)
foldchange2logratio(2,2)
foldchange2logratio(1.5,2)
foldchange2logratio(1.25,2)
library(GenomicRanges)
regions.gr <- GRanges(seqnames=Rle(rep(1,10)), ranges=IRanges(start=sample(1:1000,10), width=100), strand=Rle(rep("*",10)))
fiveGeneNames <- paste(sample(letters,5), sample(1:100,5), sep="")
genes.gr <- GRanges(seqnames=Rle(rep(1,5)), ranges=IRanges(start=sample(1:1000,5), width=100, names=fiveGeneNames), strand=Rle(sample(c("+","-"),5, replace=T)))
overlapGenes <- findOverlaps(regions.gr, genes.gr)
library(GenomicRanges)
getwd()
setwd("/Users/Nick_curie/Desktop/script_test/SV_Parser")
data <- read.table("genes.bed")
head(data)
svs<-read.table("sample.bed")
colnames(data) <- c('chr','start','end', 'stop_chr', 'source','type','int1', 'int2', 'inf1', 'strand', 'inf2', 'gene')
head(data)
data_grange <- with(data,
GRanges(chr, IRanges(start,
end,
names=gene
),
strand
)
)
data_grange
head(data_grange)
svs<-read.table("sample.bed")
colnames(svs) <- c('chr','start','end')
data_grange <- with(svs, GRanges(chr, IRanges(start, end)) )
data_grange <- with(data, GRanges(chr, IRanges(start, end, names=gene), strand) )
svs<-read.table("sample.bed")
colnames(svs) <- c('chr','start','end')
svs_grange <- with(svs, GRanges(chr, IRanges(start, end)) )
countOverlaps(data_grange, svs_grange)
match_hit <- data.frame(names(data_grange)[queryHits(overlaps)],
names(svs_grange)[subjectHits(overlaps)],
stringsAsFactors=F
)
names(match_hit) <- c('query','subject')
overlaps <- findOverlaps(data_grange, svs_grange)
match_hit <- data.frame(names(data_grange)[queryHits(overlaps)],
names(svs_grange)[subjectHits(overlaps)],
stringsAsFactors=F
)
names(match_hit) <- c('query','subject')
overlaps <- findOverlaps(data_grange, svs_grange)
match_hit <- data.frame(names(data_grange)[queryHits(overlaps)],
names(svs_grange)[subjectHits(overlaps)],
stringsAsFactors=F
)
